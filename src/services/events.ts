export function getEvents() {
  const query = ArraySelectAll(tools.xquery<EventCatalogDocumentTopElem>(`for $e in events return $e`));
  const result = [];

  for (let i = 0; i < query.length; i++) {
    result.push({
      id: query[i].id.Value,
      code: query[i].code.Value,
      name: query[i].name.Value,
      resource_id: query[i].resource_id.Value,
      type_id: query[i].type_id.Value,
      event_type_id: query[i].event_type_id.Value,
      start_date: query[i].start_date.Value,
      finish_date: query[i].finish_date.Value,
      status_id: query[i].status_id.Value,
      person_num: query[i].person_num.Value,
      unnamed_person_num: query[i].unnamed_person_num.Value,
      organizational_form: query[i].organizational_form.Value,
      education_org_id: query[i].education_org_id.Value,
      education_org_name: query[i].education_org_name.Value,
      total_cost: query[i].total_cost.Value,
      currency: query[i].currency.Value,
      is_model: query[i].is_model.Value,
      use_vclass: query[i].use_vclass.Value,
      vclass_setting_id: query[i].vclass_setting_id.Value,
      compound_program_id: query[i].compound_program_id.Value,
      education_program_id: query[i].education_program_id.Value,
      education_method_id: query[i].education_method_id.Value,
      create_compound_program_id: query[i].create_compound_program_id.Value,
      place_id: query[i].place_id.Value,
      vclass_host: query[i].vclass_host.Value,
      record_exists: query[i].record_exists.Value,
      show_record: query[i].show_record.Value,
      parent_event_id: query[i].parent_event_id.Value,
      course_finished: query[i].course_finished.Value,
      course_process: query[i].course_process.Value,
      course_started: query[i].course_started.Value,
      course_began: query[i].course_began.Value,
      test_finished: query[i].test_finished.Value,
      test_process: query[i].test_process.Value,
      test_started: query[i].test_started.Value,
      test_began: query[i].test_began.Value,
      group_formed: query[i].group_formed.Value,
      course_id: query[i].course_id.Value,
      training_plan_id: query[i].training_plan_id.Value,
      is_public: query[i].is_public.Value,
      is_open: query[i].is_open.Value,
      cost: query[i].cost.Value,
      cost_type: query[i].cost_type.Value,
      budget_period_id: query[i].budget_period_id.Value,
      distribute_cost_type: query[i].distribute_cost_type.Value,
      duration_fact: query[i].duration_fact.Value,
      duration_days_fact: query[i].duration_days_fact.Value,
      mandatory_fill_response: query[i].mandatory_fill_response.Value,
      event_form: query[i].event_form.Value,
      subdivision_id: query[i].subdivision_id.Value,
      org_id: query[i].org_id.Value,
      send_type: query[i].send_type.Value,
      send_persons_types: query[i].send_persons_types.Value,
      group_educ_group_id: query[i].group_educ_group_id.Value,
      webinar_system_id: query[i].webinar_system_id.Value,
      default_response_type_id: query[i].default_response_type_id.Value,
      user_access_role: query[i].user_access_role.Value,
      user_group_id: query[i].user_group_id.Value,
      tutor_main: query[i].tutor_main.Value,
      notification_reminder_date: query[i].notification_reminder_date.Value,
      modification_date: query[i].modification_date.Value,
      app_instance_id: query[i].app_instance_id.Value
    });
  }

  return result;
}
